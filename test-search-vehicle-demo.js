import axios from 'axios';

const API_URL = 'http://localhost:3333';
const VEHICLE_ID = 'LADIS15BR018';

async function testSearchVehicleParameter() {
  console.log('üß™ Testando par√¢metro searchVehicle no endpoint POST /part/process\n');

  const testData = {
    name: 'Alternador',
    description: 'Alternador 12V 90A original',
    vehicle_internal_id: VEHICLE_ID
  };

  try {
    // Teste 1: searchVehicle=true (padr√£o)
    console.log('üìã TESTE 1: searchVehicle=true (busca com dados do ve√≠culo)');
    console.log('   URL:', `${API_URL}/part/process?searchVehicle=true`);
    console.log('   Esperado: Busca Unwrangle incluir√° marca, modelo e ano do ve√≠culo\n');
    
    const startTime1 = Date.now();
    const response1 = await axios.post(`${API_URL}/part/process?searchVehicle=true`, testData);
    const duration1 = Date.now() - startTime1;
    
    console.log('‚úÖ Teste 1 conclu√≠do em', duration1, 'ms');
    console.log('   Status:', response1.status);
    console.log('   An√∫ncios encontrados:', response1.data.data.ads?.length || 0);
    console.log('   Pre√ßos:', response1.data.data.prices);
    console.log('');

    // Aguardar um pouco antes do pr√≥ximo teste
    await new Promise(resolve => setTimeout(resolve, 2000));

    // Teste 2: searchVehicle=false
    console.log('üìã TESTE 2: searchVehicle=false (busca apenas pelo nome da pe√ßa)');
    console.log('   URL:', `${API_URL}/part/process?searchVehicle=false`);
    console.log('   Esperado: Busca Unwrangle ser√° apenas pelo nome "Alternador"\n');
    
    const startTime2 = Date.now();
    const response2 = await axios.post(`${API_URL}/part/process?searchVehicle=false`, testData);
    const duration2 = Date.now() - startTime2;
    
    console.log('‚úÖ Teste 2 conclu√≠do em', duration2, 'ms');
    console.log('   Status:', response2.status);
    console.log('   An√∫ncios encontrados:', response2.data.data.ads?.length || 0);
    console.log('   Pre√ßos:', response2.data.data.prices);
    console.log('');

    // Compara√ß√£o
    console.log('üîç COMPARA√á√ÉO DOS RESULTADOS:');
    console.log(`   Com ve√≠culo: ${response1.data.data.ads?.length || 0} an√∫ncios`);
    console.log(`   Sem ve√≠culo: ${response2.data.data.ads?.length || 0} an√∫ncios`);
    console.log('');
    console.log('   üí° Observa√ß√£o: As outras informa√ß√µes (descri√ß√£o, dimens√µes, peso, compatibilidade)');
    console.log('      devem ser id√™nticas em ambos os casos, pois sempre usam dados do ve√≠culo.');
    console.log('');
    
    console.log('‚úÖ Teste completo! O par√¢metro searchVehicle afeta APENAS a busca Unwrangle.');

  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.response?.data || error.message);
  }
}

// Executar teste
testSearchVehicleParameter().catch(console.error);
